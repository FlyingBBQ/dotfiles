#! /bin/sh
#
# FlyingBBQ @ Bar_2
#

## Colors

. ~/.config/lemonbar/bar_colors

## Config
screen_width=1920
bar_fifo=/tmp/bar-fifo-2
bar_font="-f -misc-tamsyn-medium-r-normal--16-116-100-100-c-80-iso8859-1"
bar_width=1500
bar_height=30
bar_y=10
bar_x=$(( 1920+($screen_width - $bar_width)/2 ))

geometry="-g ${bar_width}x${bar_height}+${bar_x}+${bar_y}"
parameters=" $bar_font -B $a$bg -F $a$fg -u 3"

## Initialize
if [ $(pgrep bar_2) -gt 1]
then
    pkill bar_2
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

# make fifo file
[ -e "$bar_fifo" ] && rm "$bar_fifo"
mkfifo "$bar_fifo"

# padding
herbstclient pad 1 $(( $bar_height+$bar_y ))

## Modules
# song time
while :
do
    # check if mpd is playing
    title=$(mpc -h ~/.config/mpd/socket current -f %title%)
    if [ -n "$title" ]; then
        echo "S$highlight "$(mpc -h ~/.config/mpd/socket status | grep "%)" | awk '{ print $3}')
    else
        echo 'S'
    fi
    sleep 1
done > $bar_fifo &

# artist
while :
do
    # check if mpd is playing
    artist=$(mpc -h ~/.config/mpd/socket current -f %artist%)
    title=$(mpc -h ~/.config/mpd/socket current -f %title%)
    if [ -n "$title" ] || [ -n "$artist" ]; then

        # create temp file if $artist is not null
        temp=/tmp/.lastSong_info
        if [ ! -e $temp ]; then
            touch $temp
            echo "tit" > $temp
        fi

        # only switch when actually playing (not paused)
        playing=$(mpc -h ~/.config/mpd/socket status | sed '2q;d' | cut -d "[" -f2 | cut -d "]" -f1)
        if [ "$playing" == "playing" ]; then

            # alternate ouput with artist and title
            current=`cat $temp`
            if [ "$current" == "tit" ]; then
                echo "A$normal - $artist -"
                echo "art" > $temp
            else
                echo "A$normal $title"
                echo "tit" > $temp
            fi
        fi
    else
        echo 'A'
    fi
    # switch artist/title every 5 seconds
    sleep 5
done > $bar_fifo &

# volume
while :
do
    volume="$(pactl list sinks | grep "Volume: front-left:" | awk '{print substr($5, 1, length($5)-1)}')"
    mute="$(pactl list sinks | grep Mute: | awk '{print $2}')"

    if [ "$mute" == "yes" ];
    then
        echo 'Vmuted'
    else
        echo "V$volume%"
    fi
    sleep 1
done > $bar_fifo &

# tags
while :
do
    monitor=1
    wm_infos=""
    TAGS=( $(herbstclient tag_status $monitor) )
    for i in "${TAGS[@]}" ; do
        case ${i:0:1} in
            '#')
                # focused occupied desktop
                wm_infos="${wm_infos}$hlinv ${i:1}$clr"
                ;;
            '+')
                # focused free desktop
                wm_infos="${wm_infos}%{+u}$u_highlight ${i:1}$clr%{-u}"
                ;;
            '!')
                # focused urgent desktop
                wm_infos="${wm_infos} ${i:1}$clr"
                ;;
            '%')
                # different monitor focused
                wm_infos="${wm_infos}$occupied ${i:1}$clr"
                ;;
            '-')
                # different monitor unfocused
                wm_infos="${wm_infos}%{+u}$u_occupied ${i:1}$clr%{-u}"
                ;;
            ':')
                # occupied desktop
                wm_infos="${wm_infos}$occupied2 ${i:1}$clr"
                ;;
            *)
                # free desktop
                wm_infos="${wm_infos} ${i:1}$clr"
                ;;
        esac
        shift
    done
    echo "W$wm_infos"
    sleep .1
done > $bar_fifo &

## bar
~/.config/lemonbar/bar_fifo_2 < "$bar_fifo" | lemonbar $geometry$parameters | sh &

wait
