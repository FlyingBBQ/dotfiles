#! /bin/sh
#
# FlyingBBQ @ Bar Right
#

## Colors

. ~/.config/lemonbar/bar_colors

## Config
screen_width=1920
bar_fifo=/tmp/bar-fifo-r
bar_font="-f -misc-tamsyn-medium-r-normal--16-116-100-100-c-80-iso8859-1"
bar_width=1200
bar_height=30
bar_y=10
bar_x=$(( 1920+($screen_width - $bar_width)/2 ))

geometry="-g ${bar_width}x${bar_height}+${bar_x}+${bar_y}"
parameters=" $bar_font -B $a$bg -F $a$fg -u 3"

# make fifo file
[ -e "$bar_fifo" ] && rm "$bar_fifo"
mkfifo "$bar_fifo"

# padding
herbstclient pad 1 $(( $bar_height+$bar_y ))

# weather credentials
. ~/code/scripts/.weather

## Modules
# song time
while :
do
    # check if mpd is playing
    # check both title and artist in case a tag is empty
    title=$(mpc -h ~/.config/mpd/socket current -f %title%)
    artist=$(mpc -h ~/.config/mpd/socket current -f %artist%)
    if [ -n "$title" ] || [ -n "$artist" ]; then
        echo "S$hl "$(mpc -h ~/.config/mpd/socket status | grep "%)" | awk '{ print $3}')
    else
        echo 'S'
    fi
    sleep 1
done > $bar_fifo &

# artist
while :
do
    # check if mpd is playing
    # check both title and artist in case a tag is empty
    title=$(mpc -h ~/.config/mpd/socket current -f %title%)
    artist=$(mpc -h ~/.config/mpd/socket current -f %artist%)
    if [ -n "$title" ] || [ -n "$artist" ]; then

        # create temp file if $artist or $title is not null
        temp=/tmp/.lastSong_info
        if [ ! -e $temp ]; then
            touch $temp
            echo "tit" > $temp
        fi

        # only switch when actually playing (not paused)
        playing=$(mpc -h ~/.config/mpd/socket status | sed '2q;d' | cut -d "[" -f2 | cut -d "]" -f1)
        if [ "$playing" == "playing" ]; then

            # alternate ouput with artist and title
            current=`cat $temp`
            if [ "$current" == "tit" ]; then
                echo "A$normal - $artist -"
                echo "art" > $temp
            else
                echo "A$normal $title"
                echo "tit" > $temp
            fi
        fi
    else
        echo 'A'
    fi
    # switch artist/title every 5 seconds
    sleep 5
done > $bar_fifo &

# weather
while :
do
    # some variables sourced at top of file
    KEY=$key
    CITY=$city
    UNITS="metric"
    SYMBOL="Â°"

    # get weather from API
    if [ ! -z $CITY ]; then
        weather=$(curl -sf "http://api.openweathermap.org/data/2.5/weather?APPID=$KEY&id=$CITY&units=$UNITS")
    fi

    # parse weather
    if [ ! -z "$weather" ]; then
        weather_desc=$(echo "$weather" | jq -r ".weather[].description")
        weather_temp=$(echo "$weather" | jq ".main.temp" | cut -d "." -f 1)
        weather_icon=$(echo "$weather" | jq -r ".weather[].icon")

        echo "W$light $weather_desc, $light_hl$weather_temp$SYMBOL"
    fi
    # update every 15min because weather doesn't change that often
    # also, API max requests are 1 per 10min
    sleep 900
done > $bar_fifo &

# volume
while :
do
    volume="$(pactl list sinks | grep "Volume: front-left:" | awk '{print substr($5, 1, length($5)-1)}')"
    mute="$(pactl list sinks | grep Mute: | awk '{print $2}')"

    if [ "$mute" == "yes" ];
    then
        echo 'Vmuted'
    else
        echo "V$volume%"
    fi
    sleep 1
done > $bar_fifo &

# tags
herbstclient -i | grep --line-buffered "tag_change" > $bar_fifo &

## bar
while read -r line ; do
    case $line in
        S*)
            songtime="${line#?}$clr"
            ;;
        A*)
            artist="${line#?}$clr"
            ;;
        W*)
            weather="${line#?}$clr"
            ;;
        V*)
            volume="$normal VOL $hl${line#?}$clr"
            ;;
        tag*)
            monitor=1
            wm_infos=""
            TAGS=( $(herbstclient tag_status $monitor) )
            # cut last element (float tag)
            unset 'TAGS[${#TAGS[@]}-1]'
            for i in "${TAGS[@]}" ; do
                case ${i:0:1} in
                    '#')
                        # focused occupied desktop
                        wm_infos="${wm_infos}$hl_inv ${i:1}$clr"
                        ;;
                    '+')
                        # focused free desktop
                        wm_infos="${wm_infos}%{+u}$u_highlight ${i:1}$clr%{-u}"
                        ;;
                    '!')
                        # focused urgent desktop
                        wm_infos="${wm_infos} ${i:1}$clr"
                        ;;
                    '%')
                        # different monitor focused
                        wm_infos="${wm_infos}$occupied ${i:1}$clr"
                        ;;
                    '-')
                        # different monitor unfocused
                        wm_infos="${wm_infos}%{+u}$u_occupied ${i:1}$clr%{-u}"
                        ;;
                    ':')
                        # occupied desktop
                        wm_infos="${wm_infos}$occupied2 ${i:1}$clr"
                        ;;
                    *)
                        # free desktop
                        wm_infos="${wm_infos} ${i:1}$clr"
                        ;;
                esac
                shift
            done
            wm_infos="$dark-<$clr${wm_infos}$dark >-$clr"
            ;;
    esac
    printf "%s\n" "%{l}$songtime $artist%{c}$wm_infos%{r}$weather $volume"

done < "$bar_fifo" | lemonbar $geometry$parameters | sh &

wait
