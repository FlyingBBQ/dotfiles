#!/usr/bin/env bash
#
# FlyingBBQ - herbstluftwm
#

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

# keybindings
# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod4   # Use the super key as the main modifier

# hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-q close_and_remove
hc keybind $Mod-Return spawn ${TERMINAL:-urxvt} # use your $TERMINAL with xterm as fallback
hc keybind $Mod-d spawn dmenu_run -fn 'Misc Tamsyn:style=Regular:pixelsize=16' -nb '#1d2021' -nf '#ebdbb2' -sb '#fe8019' -sf '#1d2021' -x '360' -y '10' -w '1200' -lh '30'
hc keybind $Mod-F9 spawn ~/code/scripts/lock.sh

# focusing clients
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# splitting frames
# create an empty frame at the specified direction
hc keybind $Mod-u       chain , split   bottom  0.5 , focus -e down
hc keybind $Mod-o       chain , split   right   0.5 , focus -e right
hc keybind $Mod-Shift-u       chain , split   top  0.5 , focus -e up
hc keybind $Mod-Shift-o       chain , split   left   0.5 , focus -e left
# let the current frame explode into subframes
hc keybind $Mod-space split explode

# resizing frames
resizestep=0.05
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep

# tags
tag_names=( {1..6} )
tag_keys=( {1..6} 0 )

hc rename default "${tag_names[0]}" || true
for i in ${!tag_names[@]} ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        # first check if the tag is locked to some monitor.
        # if so, first focus the monitor
        hc keybind "$Mod-$key" \
            chain , silent substitute M tags."$i".my_monitor \
                        focus_monitor M \
                  , use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# Add a keybinding for locking the current tag to the monitor it is displayed
# on. This is done by safing the current monitor index in the my_monitor
# attribute of the focused tag. If the monitor has a (nonempty) name, use the
# monitor name instead of its index.
herbstclient keybind $Mod-m chain \
    , new_attr string tags.focus.my_monitor \
    , substitute M monitors.focus.index set_attr tags.focus.my_monitor M \
    , try and \
        . compare monitors.focus.name != "" \
        . substitute M monitors.focus.name \
                set_attr tags.focus.my_monitor M

# Add a keybinding for removing the lock
herbstclient keybind $Mod-Shift-m \
    remove_attr tags.focus.my_monitor

# Statically define which tag should be send to which monitor
lock_tag_to_monitor() {
    herbstclient chain \
        , new_attr string tags.by-name."$1".my_monitor \
        , set_attr tags.by-name."$1".my_monitor "$2"
}
# Already lock some of the tags to a monitor, for example:
# lock the second tag to the monitor with index 0
lock_tag_to_monitor 1 0
lock_tag_to_monitor 2 1
lock_tag_to_monitor 3 1
lock_tag_to_monitor 4 0

# cycle through tags
hc keybind $Mod-x use_index +1 --skip-visible
hc keybind $Mod-z use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-p pseudotile toggle
hc keybind $Mod-e cycle_layout +1 vertical horizontal
hc keybind $Mod-v cycle_layout +1 grid max
# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Control-space                                                   \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# toggle show frame background
hc keybind $Mod-b chain , cycle_value smart_window_surroundings 0 1 \
                        , cycle_value frame_gap 20 0               \
                        , cycle_value frame_bg_transparent 0 1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
# toggle between main monitors
hc keybind $Mod-Tab                                         \
            or , and . compare monitors.focus.index != 0    \
                     . focus_monitor 0                      \
               , focus_monitor 1

hc keybind $Mod-Shift-Tab focus_monitor 2
#hc keybind $Mod-Tab         cycle_all +1
#hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc attr theme.active.color '#fe8019'
hc attr theme.normal.color '#1d2021'
hc attr theme.urgent.color red
hc attr theme.inner_width 0
hc attr theme.inner_color black
hc attr theme.border_width 3
hc attr theme.floating.border_width 4
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#fe8019'
hc attr theme.active.outer_color '#fe8019'
hc attr theme.background_color '#1d2021'
hc attr theme.minimal.border_width 4
hc attr theme.minimal.active.color '#fe8019'
hc attr theme.minimal.normal.color '#1d2021'
hc attr theme.minimal.background_color '#1d2021'

hc set frame_border_active_color '#fe8019'
hc set frame_border_normal_color '#1d2021'
hc set frame_bg_active_color '#504945'
hc set frame_bg_normal_color '#3c3836'
hc set frame_border_width 0
hc set always_show_frame 1
hc set frame_bg_transparent 1
hc set frame_transparent_width 0
hc set frame_padding 0
hc set frame_gap 0
hc set window_gap 10
hc set smart_window_surroundings 0
hc set smart_frame_surroundings 1
hc set mouse_recenter_gap 0

# layout: 0=vertical, 1=horizontal
hc set default_frame_layout 1

# rules
hc unrule -F
hc rule focus=on # normally focus new clients
#hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' pseudotile=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# load layout for fixed tags
## Tag 2
hc load 2 '
(split horizontal:0.600000:0
    (clients horizontal:0)
    (clients vertical:0))
'
hc rule class=qutebrowser tag=2 index=0
hc rule class=discord tag=2 index=1
## Tag 3
hc load 3 '
(split vertical:0.750000:1
    (clients vertical:0)
    (clients horizontal:0))
'
hc rule class=tag3_ncmpcpp tag=3 index=0 pseudotile=on
hc rule class=tag3_cava tag=3 index=1 pseudotile=on

# unlock, just to be sure
hc unlock

herbstclient set tree_style '╾│ ├└╼─┐'

# do multi monitor setup here, e.g.:
hc set_monitors 1920x1080+0+0 1920x1080+1920+0
# or simply:
# hc detect_monitors

# proper floating support
. ~/.config/herbstluftwm/floatmon.sh

# start the bar and lock
. ~/.config/lemonbar/run_bars &
. ~/code/scripts/gmail.sh &
. ~/code/scripts/lock.sh &

# start programs for fixed tags
discord &
qutebrowser &
#urxvt -name tag3_ncmpcpp -e 'ncmpcpp' &
#urxvt -name tag3_cava -e 'cava' &
